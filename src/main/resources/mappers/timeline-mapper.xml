<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TimeLine">
	<resultMap type="TimeLine" id="resultTimeLine">
		<id property="m_id" column="m_id" />
		<id property="t_id" column="t_id" />
		<result property="m_img" column="m_img" />
	</resultMap>

	<!-- 타임라인 내 프로필 출력 -->
	<select id="showMyProf" parameterType="string"
		resultType="TimeLine">
		select m_id, m_img from Member where m_id = #{m_id}
	</select>

	<!-- 스토리 업데이트 리스트 -->
	<select id="showStoryList" parameterType="string"
		resultType="arrayList" resultMap="resultTimeLine">
		select * from (select story.m_id,
		m_img, m_id1, max(s_date) as s_date from
		story join member on
		story.m_id=member.m_id
		inner join follow on story.m_id = m_id2
		where
		m_id1 = #{m_id}
		and s_date > SYSDATE - 1
		group by m_id1, m_img,
		story.m_id) order by s_date DESC
	</select>

	<!-- 타임라인 순서 리스트 -->
	<select id="showTimeLineList" parameterType="string"
		resultType="arrayList" resultMap="resultTimeLine">
		select * from (select board.b_id as
		t_id, board.m_id as m_id, m_img as m_img, b_content as t_content,
		b_type as t_type, b_topid as topid, to_char(b_date,'YYYY-MM-DD
		HH24:Mi:SS') as t_time,
		b_img1
		||'|'|| b_img2 ||'|'||b_img3
		||'|'||b_img4 ||'|'||b_img5
		||'|'||b_img6
		||'|'||b_img7 ||'|'||b_img8
		||'|'||b_img9 ||'|'||b_img10 as t_img
		from board
		join boardadd on
		board.b_id = boardadd.b_id
		join follow on m_id2 = board.m_id
		join member
		on board.m_id = member.m_id
		where b_type='G'
		and m_id1 = #{m_id}
		union
		select businessboard.bb_id as t_id,
		businessboard.m_id as m_id, m_img as
		m_img, bb_info as t_content,
		bb_type as t_type, bb_topid as topid,
		to_char(bb_date,'YYYY-MM-DD
		HH24:Mi:SS') as t_time,
		bb_img1 ||'|'||bb_img2
		||'|'||bb_img3
		||'|'||bb_img4 ||'|'||bb_img5
		||'|'||bb_img6
		||'|'||bb_img7
		||'|'||bb_img8 ||'|'||bb_img9
		||'|'||bb_img10 as t_img
		from
		businessboard
		join businessboardadd on businessboard.bb_id =
		businessboardadd.bb_id
		join follow on m_id2 = businessboard.m_id
		join
		member on businessboard.m_id = member.m_id
		where bb_type='B'
		and m_id1 =
		#{m_id}
        union
        select board.b_id as
		t_id, board.m_id as m_id, m_img as m_img, b_content as t_content,
		b_type as t_type, b_topid as topid, to_char(b_date,'YYYY-MM-DD
		HH24:Mi:SS') as t_time,
		b_img1
		||'|'|| b_img2 ||'|'||b_img3
		||'|'||b_img4 ||'|'||b_img5
		||'|'||b_img6
		||'|'||b_img7 ||'|'||b_img8
		||'|'||b_img9 ||'|'||b_img10 as t_img
		from board
		join boardadd on
		board.b_id = boardadd.b_id
		join member
		on board.m_id = member.m_id
		where b_type='G'
		and board.m_id = #{m_id}
		union
		select businessboard.bb_id as t_id,
		businessboard.m_id as m_id, m_img as
		m_img, bb_info as t_content,
		bb_type as t_type, bb_topid as topid,
		to_char(bb_date,'YYYY-MM-DD
		HH24:Mi:SS') as t_time,
		bb_img1 ||'|'||bb_img2
		||'|'||bb_img3
		||'|'||bb_img4 ||'|'||bb_img5
		||'|'||bb_img6
		||'|'||bb_img7
		||'|'||bb_img8 ||'|'||bb_img9
		||'|'||bb_img10 as t_img
		from
		businessboard
		join businessboardadd on businessboard.bb_id =
		businessboardadd.bb_id
		join
		member on businessboard.m_id = member.m_id
		where bb_type='B'
		and businessboard.m_id = #{m_id}
        )
		order by t_time desc
	</select>

	<!-- 댓글 ajax 이용 업로드 -->
	<insert id="insertTimeLineComment" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into board
		(b_id, m_id, b_content, b_type, b_topid) values
		('BO'||TO_CHAR(SYSDATE,'RRMMDD')||LPAD(g_seq.NEXTVAL,3,'0'),
		#{m_id}, #{t_comment},'C', #{t_id})
	</insert>
	<insert id="insertTimeLineCommentB" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into
		businessboard
		(bb_id, m_id, bb_type, bb_topid, bb_price, bb_name,
		bb_info) values
		('BB'||TO_CHAR(SYSDATE,'RRMMDD')||LPAD(b_seq.NEXTVAL,3,'0'),
		#{m_id}, 'C', #{t_id}, '1', 'n', #{t_comment})
	</insert>

	<!-- 댓글 보여주기 -->
	<select id="hiddenShowAllCo" parameterType="string"
		resultType="arrayList" resultMap="resultTimeLine">
		select * from (select b.b_id as b_id,
		b.m_id as m_id,
		b.b_content as b_content, to_char(b.b_date,'YYYY-MM-DD
		HH24:Mi') as b_date, b.b_topid as b_topid, a.b_type as b_type,
		count(r.b_topid) as count, m_img
		from board b
		left outer
		join board a on
		b.b_topid
		= a.b_id
		left outer join board r on b.b_id =
		r.b_topid
		left outer join member m on b.m_id = m.m_id
		where
		b.b_topid=#{t_id} group
		by b.b_id, b.m_id, b.b_content,
		b.b_date,
		b.b_topid, a.b_type, m.m_img
		union
		select b.bb_id as b_id, b.m_id as m_id,
		b.bb_info as b_content,
		to_char(b.bb_date,'YYYY-MM-DD HH24:Mi') as
		b_date,
		a.bb_type as b_type,
		b.bb_topid as b_topid, count(r.bb_topid) as
		count, m_img
		from
		businessboard b
		left outer join
		businessboard a on
		b.bb_topid =
		a.bb_id
		left outer join
		businessboard r
		on b.bb_id = r.bb_topid
		left outer join member m on b.m_id = m.m_id
		where
		b.bb_topid=#{t_id} group by
		b.bb_id,
		b.m_id, b.bb_info, b.bb_date,
		a.bb_type,
		b.bb_topid, m.m_img
		) order by b_date desc
	</select>

	<!-- Like check -->
	<select id="hiddenShowLike" resultType="int">
		select sum(count) count
		from (
		select count(*) as count
		from blike
		where b_id=#{b_id} and
		m_id=#{m_id}
		union
		select count(*) as from
		bblike where bb_id=#{b_id} and
		m_id=#{m_id})
	</select>

	<!-- press Heart -->
	<insert id="pressLike" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into blike
		(b_id, m_id) values (#{t_id}, #{m_id})
	</insert>
	<insert id="pressLikeB" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into bblike
		(bb_id, m_id) values (#{t_id}, #{m_id})
	</insert>
	<delete id="pressUnLike" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from blike
		where b_id=#{t_id} and m_id=#{m_id}
	</delete>
	<delete id="pressUnLikeB" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from bblike
		where bb_id=#{t_id} and m_id=#{m_id}
	</delete>

	<!-- 계정 추천 -->
	<select id="recomFollow" parameterType="string"
		resultType="arrayList" resultMap="resultTimeLine">
		select count(b.m_id2) count, b.m_id2
		r_mid, m_img from follow a
		join follow b on a.m_id2 = b.m_id1
		join
		member on b.m_id2 = m_id
		where a.m_id1 = #{m_id}
		and b.m_id2 not in
		(select m_id2 from follow where m_id1=#{m_id})
		and b.m_id2!=#{m_id}
		group by b.m_id2, m_img
		order by dbms_random.value
	</select>

	<!-- 계정 팔로우 -->
	<insert id="insertFollow" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into follow
		(m_id1, m_id2) values (#{m_id}, #{r_mid})
	</insert>

	<!-- 댓글 삭제 -->
	<delete id="deleteCommentl" parameterType="string"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from blike
		where b_id= #{b_id}
	</delete>
	<delete id="deleteCommentt" parameterType="string"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from board
		where b_topid = #{b_id}
	</delete>
	<delete id="deleteComment" parameterType="string"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from board
		where board.b_id= #{b_id}
	</delete>
	<delete id="deleteCommentlB" parameterType="string"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from bblike
		where bb_id= #{b_id}
	</delete>
	<delete id="deleteCommenttB" parameterType="string"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from
		businessboard where bb_topid = #{b_id}
	</delete>
	<delete id="deleteCommentB" parameterType="string"
		flushCache="true" statementType="PREPARED" timeout="20">
		delete from
		businessboard where businessboard.bb_id= #{b_id}
	</delete>

	<!-- 답글 작성 -->
	<insert id="insertReplyComment" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into board
		(b_id, m_id, b_content, b_type, b_topid) values
		('BO'||TO_CHAR(SYSDATE,'RRMMDD')||LPAD(g_seq.NEXTVAL,3,'0'),
		#{m_id}, #{t_comment},'R', #{t_id})
	</insert>
	<insert id="insertReplyCommentB" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into
		businessboard
		(bb_id, m_id, bb_type, bb_topid, bb_price, bb_name,
		bb_info) values
		('BB'||TO_CHAR(SYSDATE,'RRMMDD')||LPAD(b_seq.NEXTVAL,3,'0'),
		#{m_id}, 'R', #{t_id}, '1', 'n', #{t_comment})
	</insert>

	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		update board set
		b_content = #{t_comment} where b_id = #{t_id}
	</update>
	<update id="updateCommentB" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		update
		businessboard set bb_info = #{t_comment} where bb_id = #{t_id}
	</update>

	<!-- 게시글 좋아요 카운트 -->
	<select id="countLike" resultType="int">
		select sum(count) count from (
		select count(*) as count
		from blike
		where b_id=#{t_id}
		union
		select
		count(*) as from
		bblike where bb_id=#{t_id})
	</select>

	<!-- 신고 -->
	<select id="reportchk" resultType="int">
		select sum(count) count from (
		select count(*) as count
		from ReportBoard
		where b_id=#{b_id} and m_id=
		#{m_id}
		union
		select count(*) as from
		reportbusinessboard where
		bb_id=#{b_id} and m_id=
		#{m_id})
	</select>
	<insert id="insertReport" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into
		reportboard (b_id, m_id, rb_reason) values (#{b_id}, #{m_id},
		#{r_reason})
	</insert>
	<insert id="insertReportB" parameterType="TimeLine"
		flushCache="true" statementType="PREPARED" timeout="20">
		insert into
		reportbusinessboard (bb_id, m_id, rbb_reason) values (#{b_id},
		#{m_id}, #{r_reason})
	</insert>

	<!-- 계정 언팔로 -->
	<delete id="unfollow" parameterType="string" flushCache="true"
		statementType="PREPARED" timeout="20">
		delete from follow where
		m_id1=#{m_id} and m_id2=#{id}
	</delete>

	<!-- 자동검색 완성 -->
	<select id="autocomplete" parameterType="string"
		resultType="arrayList" resultMap="resultTimeLine">
		select '#'||h_tag word from hashtag
		where h_tag like concat('%',concat(UPPER(#{word}),'%')) or
		h_tag like
		concat('%',concat(LOWER(#{word}),'%'))
		union
		select '@'||m_id word from
		member where m_id like
		concat('%',concat(UPPER(#{word}),'%')) or
		m_id
		like concat('%',concat(LOWER(#{word}),'%'))
	</select>

	<!-- 해쉬태그 표시 -->
	<select id="showHashTag" parameterType="string"
		resultType="arrayList" resultMap="resultTimeLine">
		select h_tag from hashtag where b_id= #{t_id}
	</select>
	
	<!-- 팔로우한 계정 상태 표시 -->
<select id="chkfollow" parameterType="string"
		resultType="arrayList" resultMap="resultTimeLine">
		select m_id2 id, m_img, m_activity from member join follow on m_id = m_id2 where m_id1=#{m_id}
	</select>
	
	<!-- 회원 타입 조회 -->
	<select id="showMemberType" parameterType="string" resultType="string">
	select m_usage from member where m_id=#{m_id}
	</select>
</mapper>
